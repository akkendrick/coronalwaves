;+
;
; NAME: display_labels.pro
;
; USAGE: display_labels,img,mask
; 
; PURPOSE: Uses DISPLAY.PRO to display 2-D data array, then calls
;  IDL's XYOUTS.PRO to overlay labels of features, coded black or
;  white by sign (black features have white labels, and vice versa).
;
; ARGUMENTS:
;  IMG = data array used to generate 
;  MASK = 2-D array of each pixel's feature's label,
;    generated by, e.g., RANKDOWN.PRO
;  
; OPTIONAL ARGUMENTS/KEYWORDS:
;    CHARSIZE= Size of characters used in labels by XYOUTS.PRO; DEFAULT=1
;    XOFFSET= Horizontal shift of labels, in units of pixels, from
;             pixel center; DEFAULT = 0. (See also XYOUTS.PRO.)
;    YOFFSET= Vertical shift of labels, in units of pixels, from
;             pixel center; DEFAULT = 0. (See also XYOUTS.PRO.)
;    ABS= Set this keyword to omit negative sign in negative labels.
;    
; SIDE EFFECTS/ROUTINES CALLED: XYOUTS.PRO
; 
; HISTORY: Written 27 March 2005, BTW
;
;- 

pro display_labels, img, mask, abs=abs, $
                    charsize=charsize,xoffset=xoffset,yoffset=yoffset

if not(keyword_set(charsize)) then charsize = 1
if not(keyword_set(xoffset)) then xoffset = 0.
if not(keyword_set(yoffset)) then yoffset = 0.

nz = where(mask ne 0, n_nz)
nx = n_elements(mask(*,0))

if (n_nz eq 0) then begin
    print,'% DISPLAY_LABELS.PRO: No elements of mask are non-zero.'
endif else begin

    x = (nz)mod(nx)
    y = floor(nz/nx)

    for i = 0,n_nz-1 do begin
        if (img(nz(i)) gt 0) then color = 0 else color = 255

        if keyword_set(abs) then label = abs(fix(mask(nz(i)))) $
          else label = fix(mask(nz(i)))
        xyouts,x(i)+xoffset,y(i)+yoffset,string(label), $
          align=0.875,color=color,charsize=charsize

    endfor
endelse

end

